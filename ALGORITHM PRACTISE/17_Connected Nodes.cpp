#include <bits/stdc++.h>
using namespace std;

const int N = 1e5 + 5;
vector<int> v[N];
int main()
{
  int n, e;
  cin >> n >> e;

  while (e--)
  {
    int a, b;
    cin >> a >> b;
    v[a].push_back(b);
    v[b].push_back(a);
  }

  int q;
  cin >> q;
  while (q--)
  {
    int x;
    cin >> x;
    if (v[x].empty())
    {
      cout << "-1" << endl;
    }

    else
    {
      sort(v[x].begin(), v[x].end(), greater<int>());
      for (int child : v[x])
      {
        cout << child << " ";
      }

      cout << endl;
    }
  }

  return 0;
}

Connected Nodes
Explanation: 
আপনাকে একটি আনডাইরেক্টেড গ্রাফ ইনপুট হিসেবে দেওয়া হবে। তারপর কিছু কুয়েরিজ দেওয়া হবে। প্রতি কুয়েরিতে একটা নোড দেওয়া হবে। ওই নোড এর সাথে কানেক্টেড সকল নোড এর ভ্যালুকে আপনার ডিসেন্ডিং অর্ডার এ প্রিন্ট করতে হবে। যদি নোড এর সাথে কানেক্টেড কোনো নোড না থাকে সেই ক্ষেত্রে -1 প্রিন্ট করতে হবে।



Hints
মোডিউলে যেভাবে আনডাইরেক্টেড গ্রাফ ইনপুট নেওয়া দেখানো হয়েছে সেভাবে ইনপুট নিন। এবার কুয়েরি ইনপুট নিয়ে সেটার লুপ চালান ও একটি ভ্যালু ইনপুট নিন। এরপর দেখুন সেই ভ্যালু এর এডজেসেন্সি লিস্ট এর সাইজ ০ কিনা। যদি হয় তাহলে -1 প্রিন্ট করুন আর নাহলে লিস্ট এর ভ্যালু গুলোকে ডিসেন্ডিং অর্ডার এ সর্ট করুন এবং ভ্যালু গুলো প্রিন্ট করুন।

